---
- name: make sure zsh folder exist
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/zsh/"
    state: directory

- name: Insert the ZDOTDIR Assignment
  lineinfile:
    path: "/etc/zshenv"
    line: 'ZDOTDIR="$HOME/.config/zsh"'
    state: present
    create: yes

- name: Symlink my zshrc to ZDOTDIR
  file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/zsh/.zshrc"
    dest: "{{ lookup('env', 'HOME') }}/.config/zsh/.zshrc"
    state: link

- name: Symlink my zshenv to ZDOTDIR
  file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/zsh/.zshenv"
    dest: "{{ lookup('env', 'HOME') }}/.config/zsh/.zshenv"
    state: link

- name: Symlink my zsh_function to ZDOTDIR
  file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/zsh/zsh-functions"
    dest: "{{ lookup('env', 'HOME') }}/.config/zsh/zsh-functions"
    state: link

- name: make sure git folder exist
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/git/"
    state: directory
    
- name: Setup Git config
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/Git/config"
    dest: "{{ lookup('env', 'HOME') }}/.config/git/config"
    state: link

- name: Setup Git Ignore_global
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/Git/.gitignore_global"
    dest: "{{ lookup('env', 'HOME') }}/.config/git/.gitignore_global"
    state: link

- name: SymLink Neovim
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/nvim/"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim"
    state: link

- name: make sure i3 folder exist
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/i3/"
    state: directory

- name: Symlink i3 Config
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/i3/config"
    dest: "{{ lookup('env', 'HOME') }}/.config/i3/config"
    state: link
  when: lookup('ansible.builtin.env', 'XDG_SESSION_TYPE') == 'x11'

- name: make sure sway folder exist
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/sway/"
    state: directory

- name: Symlink wayland Config
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/sway/config"
    dest: "{{ lookup('env', 'HOME') }}/.config/sway/config"
    state: link
  when: lookup('ansible.builtin.env', 'XDG_SESSION_TYPE') == 'wayland'

- name: make sure sxhkd folder exist
  become: no
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/sxhkd/"
    state: directory

- name: SymLink sxhkdrc
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/sxhkd/sxhkdrc"
    dest: "{{ lookup('env', 'HOME') }}/.config/sxhkd/sxhkdrc"
    state: link


- name: make sure tmux folder exist
  become: no
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/tmux/"
    state: directory

# need to clone the TPM THINGY
# gotta figure out how to let ansible if dir exist, dont run

- name: SymLink tmux.conf
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/tmux/.tmux.conf"
    dest: "{{ lookup('env', 'HOME') }}/.config/tmux/tmux.conf"
    state: link

- name: Symlink x11 .Xresources
  file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/x11/.Xresources"
    dest: "{{ lookup('env', 'HOME') }}/.Xresources"
    state: link

- name: Symlink x11 .xinitrc
  file:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/x11/.xinitrc"
    dest: "{{ lookup('env', 'HOME') }}/.xinitrc"
    state: link
